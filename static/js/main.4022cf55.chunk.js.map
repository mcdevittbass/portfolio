{"version":3,"sources":["components/IntroComponent.js","shared/baseUrl.js","components/Header.js","components/Bio.js","components/ProjectCard.js","shared/projects.js","components/SectionBreak.js","components/InfoComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Intro","props","handleMouseEnter","event","setState","bgColor","hiddenText","shownText","handleMouseLeave","state","this","joke","intro","Fragment","className","style","backgroundColor","onMouseEnter","onMouseLeave","display","fontWeight","color","class","to","id","Component","baseUrl","Header","href","target","rel","title","role","Bio","backgroundImage","ProjectCard","buttonShow","items","site","performance","buttonCode","code","patch","siteBtnConst","roll","siteButton","sm","src","thumbnail","alt","subtitle","text","PROJECTS","key","SectionBreak","InfoPage","Contact","Main","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SA2DeA,E,kDArDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,iBAAmB,SAACC,GAChB,EAAKC,SAAS,CAACC,QAAS,YACxB,EAAKD,SAAS,CAACE,WAAY,UAC3B,EAAKF,SAAS,CAACG,UAAW,UAZX,EAenBC,iBAAmB,SAACL,GAChB,EAAKC,SAAS,CAACC,QAAS,OACxB,EAAKD,SAAS,CAACE,WAAY,SAC3B,EAAKF,SAAS,CAACG,UAAW,WAhB1B,EAAKE,MAAQ,CACTJ,QAAS,KACTE,UAAW,QACXD,WAAY,QALD,E,qDAsBf,IAAMD,EAAUK,KAAKD,MAAMJ,QACrBM,EAAOD,KAAKD,MAAMH,WAClBM,EAAQF,KAAKD,MAAMF,UACzB,OACI,kBAAC,IAAMM,SAAP,KACI,kBAAC,IAAD,CAAWC,UAAU,eACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,UAAU,4BACX,kBAAC,IAAD,CAAWC,MAAO,CAACC,gBAAiBX,GAChCS,UAAU,qBACVG,aAAcP,KAAKR,iBACnBgB,aAAcR,KAAKF,kBACnB,yBAAKO,MAAO,CAACI,QAASP,IAClB,wBAAIE,UAAU,eAAd,kBACA,wBAAIA,UAAU,oBAAd,YAA0C,0BAAMC,MAAO,CAACK,WAAY,OAAQC,MAAO,YAAzC,wBAA1C,sBAEJ,yBAAKN,MAAO,CAACI,QAASR,GAAOG,UAAU,eACnC,0DACA,wBAAIQ,MAAM,SACV,kBAAC,IAAD,CAASC,GAAG,SACR,kBAAC,IAAD,CAAQC,GAAG,cAAX,+B,GA3CpBC,aCJPC,EAAU,aCIVC,EAAS,WAClB,OACQ,kBAAC,IAAD,CAAKb,UAAU,mBACX,kBAAC,IAAD,CAAKA,UAAU,iDACX,kBAAC,IAAD,CAAMA,UAAU,oCACR,uBAAGc,KAAK,mDAAmDC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,eACvG,uBAAGjB,UAAU,+CAErB,kBAAC,IAAD,CAAUA,UAAU,sBAApB,YAGR,kBAAC,IAAD,CAAKA,UAAU,oBACX,wBAAIA,UAAU,uBAAd,kBACA,wBAAIA,UAAU,eAAd,yBAEJ,kBAAC,IAAD,CAAKA,UAAU,+BACX,kBAAC,IAAD,CAAMA,UAAU,oCACZ,uBAAGkB,KAAK,SAASJ,KAAMF,EAAU,2BAA4BG,OAAO,SAASC,IAAI,sBAAsBC,MAAM,UACzG,uBAAGjB,UAAU,uCAEjB,kBAAC,IAAD,CAAUA,UAAU,sBAApB,cCWTmB,EA/BH,SAAChC,GACT,OACI,kBAAC,IAAMY,SAAP,KACI,kBAAC,IAAD,CAAKC,UAAU,2BAA2BC,MAAO,CAACmB,gBAAgB,OAAD,OAASR,EAAT,uBAC7D,kBAAC,IAAD,CAAKZ,UAAU,8BACX,kBAAC,IAAD,CAAMA,UAAU,mBAChB,6CACmB,6BADnB,gLAI8C,6BAAM,6BAJpD,8dAWwE,6BAAM,6BAX9E,kSC8BJqB,E,uKAlCR,IAAIC,EAAa1B,KAAKT,MAAMoC,MAAMC,KAAO,OAAS5B,KAAKT,MAAMoC,MAAME,YAAc,cAAgB,GAE7FC,EAAa9B,KAAKT,MAAMoC,MAAMI,KAAO,OAAS/B,KAAKT,MAAMoC,MAAMK,MAAQ,cAAgB,GAErFC,EAAe,uBAAG7B,UAAU,yBACV8B,KAAK,SACLhB,KAAMlB,KAAKT,MAAMoC,MAAMC,MAAQ5B,KAAKT,MAAMoC,MAAME,YAChDV,OAAO,SACPC,IAAI,uBACCM,GACvBS,EAAanC,KAAKT,MAAMoC,MAAMC,MAAQ5B,KAAKT,MAAMoC,MAAME,YAAcI,EAAe,8BAE1F,OACI,kBAAC,IAAD,CAAK7B,UAAU,wBACX,kBAAC,IAAD,CAAMgC,GAAG,IAAItB,GAAId,KAAKT,MAAMoC,MAAMb,GAAIV,UAAU,yBAC5C,kBAAC,IAAD,CAASiC,IAAKrC,KAAKT,MAAMoC,MAAMW,UAAWC,IAAKvC,KAAKT,MAAMoC,MAAMY,MAChE,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYvC,KAAKT,MAAMoC,MAAMN,OAC7B,kBAAC,IAAD,KAAYrB,KAAKT,MAAMoC,MAAMa,UAC7B,kBAAC,IAAD,KAAWxC,KAAKT,MAAMoC,MAAMc,MAC5B,uBAAGrC,UAAU,yBACT8B,KAAK,SACLhB,KAAMlB,KAAKT,MAAMoC,MAAMI,MAAQ/B,KAAKT,MAAMoC,MAAMK,MAChDb,OAAO,SACPC,IAAI,uBACCU,GACRK,S,GA7BCpB,aCFb2B,EAAW,CACpB,CACIC,IAAK,EACL7B,GAAI,eACJO,MAAO,sBACPmB,SAAU,kBACVT,KAAM,4DACNH,KAAM,4DACNa,KAAM,uNACNH,UAAWtB,EAAU,+BACrBuB,IAAK,iCAET,CACII,IAAK,EACL7B,GAAI,WACJO,MAAO,sBACPmB,SAAU,WACVT,KAAM,kDACNH,KAAM,kDACNa,KAAM,+NACNH,UAAWtB,EAAU,6BACrBuB,IAAK,6BAET,CACII,IAAK,EACL7B,GAAI,YACJO,MAAO,sBACPU,KAAM,4CACNU,KAAM,2DACNH,UAAWtB,EAAU,gCACrBuB,IAAK,kCAET,CACII,IAAK,EACL7B,GAAI,YACJO,MAAO,4BACPmB,SAAU,YACVR,MAAOhB,EAAU,4BACjBa,YAAa,8CACbY,KAAM,0JACNH,UAAWtB,EAAU,gCACrBuB,IAAK,mDAET,CACII,IAAK,EACL7B,GAAI,kBACJO,MAAO,YACPmB,SAAU,YACVR,MAAOhB,EAAU,gCACjBa,YAAa,8CACbY,KAAM,+SACNH,UAAWtB,EAAU,gCACrBuB,IAAK,oCCxCEK,EAXM,SAACrD,GAClB,IAAIkD,EAAOlD,EAAMkD,KACjB,OACI,kBAAC,IAAD,CAAKrC,UAAU,gBACX,kBAAC,IAAD,CAAKA,UAAU,eACX,4BAAKqC,MCCRI,EAAW,SAACtD,GACrB,OACI,kBAAC,IAAMY,SAAP,KACQ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcsC,KAAK,oBACnB,kBAAC,IAAD,CAAKrC,UAAU,+BACX,kBAAC,EAAD,CAAauB,MAAOe,EAAS,KAC7B,kBAAC,EAAD,CAAaf,MAAOe,EAAS,KAC7B,kBAAC,EAAD,CAAaf,MAAOe,EAAS,MAEjC,kBAAC,EAAD,CAAcD,KAAK,YACnB,kBAAC,IAAD,CAAKrC,UAAU,+BACX,kBAAC,EAAD,CAAauB,MAAOe,EAAS,KAC7B,kBAAC,EAAD,CAAaf,MAAOe,EAAS,MAEjC,kBAAC,EAAD,QAMVI,EAAU,SAACvD,GACb,OACI,kBAAC,IAAD,CAAKa,UAAU,8BACX,kBAAC,IAAD,CAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMA,UAAU,oCACZ,uBAAGkB,KAAK,SAASJ,KAAK,gCAAgCC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,SAClG,uBAAGjB,UAAU,qCAEjB,kBAAC,IAAD,CAAUA,UAAU,sBAApB,gBCxBL2C,EAVD,SAACxD,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyD,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAUnC,GAAG,YCGVoC,MARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4022cf55.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Row, Col, Container, Jumbotron, Button} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n//change the display on mouseover using setState method\nclass Intro extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bgColor: null,\n            shownText: 'block',\n            hiddenText: 'none'\n        }\n    }\n\n    handleMouseEnter = (event) => {\n        this.setState({bgColor: '#011638'});\n        this.setState({hiddenText: 'block'});\n        this.setState({shownText: 'none'});\n    }\n\n    handleMouseLeave = (event) => {\n        this.setState({bgColor: null});\n        this.setState({hiddenText: 'none'});\n        this.setState({shownText: 'block'});\n    }\n\n    render() {\n        const bgColor = this.state.bgColor;\n        const joke = this.state.hiddenText;\n        const intro = this.state.shownText;\n        return(\n            <React.Fragment>\n                <Container className=\"h-100 mt-10\">\n                    <Row>\n                        <Col className=\"col col-sm-6 offset-sm-3\">\n                            <Jumbotron style={{backgroundColor: bgColor}} \n                                className=\"intro-card mx-auto\" \n                                onMouseEnter={this.handleMouseEnter} \n                                onMouseLeave={this.handleMouseLeave}>\n                                <div style={{display: intro}}>\n                                    <h1 className=\"text-center\">Megan McDevitt</h1>\n                                    <h3 className=\"lead text-center\">The best <span style={{fontWeight: 'bold', color: '#83C5BE'}}>Full Stack Developer</span> on the planet...</h3>\n                                </div>\n                                <div style={{display: joke}} className=\"text-center\">\n                                    <h1>Depending on the planet...</h1>\n                                    <hr class=\"my-4\" />\n                                    <NavLink to=\"/info\">\n                                        <Button id=\"moreButton\">More about Megan</Button>\n                                    </NavLink>\n                                </div>\n                            </Jumbotron>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\nexport default Intro;\n","//needed for all images to show on GitHub Pages\nexport const baseUrl = '/portfolio';","import React from 'react';\nimport {Row, Col, Card, CardText} from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\n\n//on mobile, the order changes so the two links move below the name\nexport const Header = () => {\n    return(\n            <Row className=\"m-3 header-card\">\n                <Col className='col-6 col-sm-2 text-center order-1 order-sm-0'>\n                    <Card className='header-icon justify-items-center'>\n                            <a href=\"https://github.com/mcdevittbass?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"GitHub Page\">\n                                <i className=\"fa fa-github fa-5x fa-inverse text-center\"></i>\n                            </a>\n                        <CardText className='text-center nowrap'>GitHub</CardText>\n                    </Card>\n                </Col>\n                <Col className=\"col-sm-6 mx-auto\">\n                    <h1 className=\"text-center mx-auto\">Megan McDevitt</h1>\n                    <h4 className=\"text-center\" >Full Stack Developer</h4>\n                </Col>\n                <Col className=' col-6 col-sm-2 text-center'>\n                    <Card className='header-icon justify-items-center'>\n                        <a role=\"button\" href={baseUrl + '/img/Software-Resume.pdf'} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Resume\">\n                            <i className=\"fa fa-file-pdf-o fa-5x fa-inverse\"></i>\n                        </a>\n                        <CardText className='text-center nowrap'>Resume</CardText>\n                    </Card>\n                </Col>\n            </Row>\n    );\n}","import React from 'react';\nimport { Row, Col, Card} from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\n\n//Bio in a reactstrap card for clean design/rounded edges\nconst Bio = (props) => {\n    return (\n        <React.Fragment>\n            <Row className='bio-background py-3 px-0' style={{backgroundImage: `url(${baseUrl}/img/plant2.jpeg)`}}>\n                <Col className='col-9 col-md-8 mx-auto p-0'>\n                    <Card className='bio mx-auto p-4'>\n                    <p>\n                        Hi, I'm Megan. <br /> \n                        I have experience coding in React and React Native (with Redux) \n                        in addition to HTML, CSS (with SCSS and Bootstrap), Javascript, C, \n                        and using Git/GitHub for version control. <br /><br />\n                        I spent the last decade of my life as a professional musician and \n                        music teacher. While studying for my doctorate in double bass performance,\n                        I began experimenting with performing with electronics. I learned to generate\n                        and manipulate my own sounds using a program called Max/MSP, \n                        which is based in C, and fell in love with coding. \n                        This began a move toward software development, culminating in enrollment in \n                        Nucamp Full Stack Bootcamp and a decision to make a career change.  <br /><br />\n                        I am most interested in using logic to solve problems and build great products. \n                        That could mean creating efficient, beautiful, and well-designed\n                        user interfaces, whether web or mobile, and I am also eager to learn and work\n                        on the backend to create thoughtful and efficient systems.\n\n                    </p>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n}\n\nexport default Bio;","import React, { Component } from 'react';\nimport { Card, CardBody, CardImg, Col, CardTitle, CardText} from 'reactstrap';\n\n//takes data from projects.js as props to populate the card\nclass ProjectCard extends Component {\n    render() {\n        //if it's a website show \"site\", if it's a max patch show \"Performance\"\n        let buttonShow = this.props.items.site ? 'Site' : this.props.items.performance ? 'Performance' : '';\n        //if it's a website show \"code\", if it's a Max patch show \"patch photo\"\n        let buttonCode = this.props.items.code ? 'Code' : this.props.items.patch ? 'Patch Photo' : '';\n        //if there is no site to show, only show the \"code\" button or \"performance\" button\n        const siteBtnConst = <a className='btn btn-secondary mx-2'\n                                roll='button' \n                                href={this.props.items.site || this.props.items.performance}\n                                target='_blank'\n                                rel='noopener noreferrer'>\n                                    {buttonShow}</a>\n        const siteButton = this.props.items.site || this.props.items.performance ? siteBtnConst : <div />;\n\n        return (\n            <Col className='col-12 col-md-4 my-2'>    \n                <Card sm='6' id={this.props.items.id} className='projectCard m-2 h-100'>    \n                    <CardImg src={this.props.items.thumbnail} alt={this.props.items.alt} />\n                    <CardBody>\n                        <CardTitle>{this.props.items.title}</CardTitle>\n                        <CardTitle>{this.props.items.subtitle}</CardTitle>\n                        <CardText>{this.props.items.text}</CardText>\n                        <a className='btn btn-secondary mx-2'\n                            roll='button' \n                            href={this.props.items.code || this.props.items.patch}\n                            target='_blank'\n                            rel='noopener noreferrer'>\n                                {buttonCode}</a>\n                        {siteButton}\n                    </CardBody>\n                </Card>\n            </Col>\n        );\n    }\n }\n \n export default ProjectCard;","import { baseUrl } from '../shared/baseUrl';\n\nexport const PROJECTS = [\n    {\n        key: 0,\n        id: 'fp-bootstrap',\n        title: 'Five Points Bakery,', \n        subtitle: 'using Bootstrap',\n        code: 'https://github.com/mcdevittbass/FivePointsBakeryBootstrap',\n        site: 'https://mcdevittbass.github.io/FivePointsBakeryBootstrap/',\n        text: 'The Five Points Bakery website began as a design using Bootstrap. It includes modals, carousels, forms, and custom buttons. I later converted it to React. It should be launching as their official website in 2020.',\n        thumbnail: baseUrl + '/img/FP-Homepage-cropped.png',\n        alt: 'Five Points Bakery, Bootstrap'\n    },\n    {\n        key: 1,\n        id: 'fp-react',\n        title: \"Five Points Bakery,\",\n        subtitle: \"in React\",\n        code: 'https://github.com/mcdevittbass/FivePointsReact',\n        site: 'https://mcdevittbass.github.io/FivePointsReact/',\n        text: 'The Five Points Bakery website began as a design using Bootstrap. I later converted it to React. Many of the components are reusable (and reused!) blocks of code. It should be launching as their official website in 2020.',\n        thumbnail: baseUrl + '/img/FP-events-cropped.png',\n        alt: 'Five Points Bakery, React'\n    },\n    {\n        key: 2,\n        id: 'portfolio',\n        title: \"This Portfolio Site\",\n        code: 'https://github.com/mcdevittbass/portfolio',\n        text: 'I hope you are enjoying this website I created in React!',\n        thumbnail: baseUrl + '/img/portfolio-site-whole.png',\n        alt: 'Portfolio Site, Megan McDevitt'\n    },\n    {\n        key: 3,\n        id: 'raw-patch',\n        title: \"On the raw and the cooked\",\n        subtitle: \"Max Patch\",\n        patch: baseUrl + '/img/On-the-raw-patch.png',\n        performance: 'https://www.youtube.com/watch?v=WbuLw3Yd0j8',\n        text: 'I wrote this piece for double bass and electronics for one of my dissertation recitals in 2016. I made the electronic sounds and effects using Max/MSP.',\n        thumbnail: baseUrl + '/img/On-the-raw-rev-patch.png',\n        alt: 'Max Patch for piece \"On the raw and the cooked\"'\n    },\n    {\n        key: 3,\n        id: 'hysterics-patch',\n        title: \"Hysterics\",\n        subtitle: \"Max Patch\",\n        patch: baseUrl + '/img/Hysterics-screenshot.png',\n        performance: 'https://www.youtube.com/watch?v=2AQ5UxXgKl0',\n        text: 'This piece took a track and manipulated it at varying speeds and pitch shifts, eventually looping and dissintigrating. There are also pitch shifts from the instrument input, and some hysterical laughter from one of the performers (me). It was written for my double bass duo, Shade and Light, in 2018.',\n        thumbnail: baseUrl + '/img/Hysterics-screenshot.png',\n        alt: 'Max Patch for piece \"Hysterics\"'\n    }\n];","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst SectionBreak = (props) => {\n    let text = props.text;\n    return (\n        <Row className='section mt-5'>\n            <Col className='text-center'>\n                <h1>{text}</h1>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SectionBreak;","import React from 'react';\nimport { Header } from './Header';\nimport { Row, Col, Card, CardText} from 'reactstrap';\nimport Bio from './Bio';\nimport ProjectCard from './ProjectCard';\nimport { PROJECTS } from '../shared/projects';\nimport SectionBreak from './SectionBreak';\n\n\nexport const InfoPage = (props) => {\n    return (\n        <React.Fragment>\n                <Header />\n                <Bio />\n                <SectionBreak text='Recent Projects' />\n                <Row className='justify-content-center px-3'>\n                    <ProjectCard items={PROJECTS[0]} />\n                    <ProjectCard items={PROJECTS[1]} />\n                    <ProjectCard items={PROJECTS[2]} />\n                </Row>\n                <SectionBreak text='Max/MSP' />\n                <Row className='justify-content-center px-3'>\n                    <ProjectCard items={PROJECTS[3]} />\n                    <ProjectCard items={PROJECTS[4]} />\n                </Row>\n                <Contact />\n\n        </React.Fragment>\n    );\n}\n\nconst Contact = (props) => {\n    return (\n        <Row className='justify-content-center m-5'>\n            <Col className='col-sm-2 text-center'>\n                <Card className='header-icon justify-items-center'>\n                    <a role=\"button\" href=\"mailto:mcdevittbass@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Email\">\n                        <i className=\"fa fa-envelope fa-5x fa-inverse\"></i>\n                    </a>\n                    <CardText className='text-center nowrap'>Email Me</CardText>\n                </Card>\n            </Col>\n        </Row>\n    );\n}","import React from 'react';\nimport Intro from './IntroComponent';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { InfoPage } from './InfoComponent';\n\nconst  Main = (props) => {\n    return (\n        <Switch>\n            <Route path='/home'><Intro /></Route>\n            <Route path='/info'><InfoPage /></Route>\n            <Redirect to='/home' />\n        </Switch>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './App.scss';\nimport Main from './components/MainComponent';\nimport { HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Main />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}