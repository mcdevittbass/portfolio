{"version":3,"sources":["components/IntroComponent.js","shared/baseUrl.js","components/Header.js","components/Bio.js","components/ProjectCard.js","shared/projects.js","components/SectionBreak.js","components/InfoComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Intro","useState","bgColor","setBgColor","intro","setIntro","joke","setJoke","Fragment","className","style","backgroundColor","onMouseEnter","onMouseLeave","display","fontWeight","color","to","id","baseUrl","Header","href","target","rel","title","role","Bio","props","backgroundImage","textAlign","ProjectCard","buttonShow","items","site","performance","buttonCode","code","patch","siteBtnConst","roll","siteButton","sm","src","thumbnail","alt","subtitle","text","PROJECTS","key","SectionBreak","InfoPage","codingProjects","filter","item","maxProjects","map","reverse","Contact","Main","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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,EAAU,6BACrByB,IAAK,6BAET,CACII,IAAK,EACL9B,GAAI,YACJM,MAAO,sBACPY,KAAM,4CACNU,KAAM,2DACNH,UAAWxB,EAAU,gCACrByB,IAAK,kCAET,CACII,IAAK,EACL9B,GAAI,YACJM,MAAO,4BACPqB,SAAU,YACVR,MAAOlB,EAAU,4BACjBe,YAAa,8CACbY,KAAM,0JACNH,UAAWxB,EAAU,gCACrByB,IAAK,mDAET,CACII,IAAK,EACL9B,GAAI,kBACJM,MAAO,YACPqB,SAAU,YACVR,MAAOlB,EAAU,gCACjBe,YAAa,8CACbY,KAAM,+SACNH,UAAWxB,EAAU,gCACrByB,IAAK,mCAET,CACII,IAAK,EACL9B,GAAI,WACJM,MAAO,qBACPY,KAAM,qDACNU,KAAM,wHACNb,KAAM,2CACNU,UAAWxB,EAAU,0BACrByB,IAAK,2BAET,CACII,IAAK,EACL9B,GAAI,aACJM,MAAO,gCACPY,KAAM,2CACNU,KAAM,2HACNb,KAAM,0CACNU,UAAWxB,EAAU,qBACrByB,IAAK,sCAET,CACII,IAAK,EACL9B,GAAI,QACJM,MAAO,mBACPY,KAAM,wCACNU,KAAM,mFACNb,KAAM,uCACNU,UAAWxB,EAAU,iBACrByB,IAAK,aAET,CACII,IAAK,EACL9B,GAAI,eACJM,MAAO,+DACPqB,SAAU,YACVR,MAAOlB,EAAU,wBACjBe,YAAa,8CACbY,KAAM,+QACNH,UAAWxB,EAAU,wBACrByB,IAAK,gCAET,CACII,IAAK,EACL9B,GAAI,YACJM,MAAO,YACPY,KAAM,8CACNU,KAAM,6PACNb,KAAM,mCACNU,UAAWxB,EAAU,qBACrByB,IAAK,iBAET,CACII,IAAK,GACL9B,GAAI,eACJM,MAAO,eACPqB,SAAU,uBACVT,KAAM,+CACNU,KAAM,gQACNH,UAAWxB,EAAU,iCACrByB,IAAK,iBCrGEK,EAXM,SAACtB,GAClB,IAAImB,EAAOnB,EAAMmB,KACjB,OACI,kBAAC,IAAD,CAAKrC,UAAU,gBACX,kBAAC,IAAD,CAAKA,UAAU,eACX,4BAAKqC,MCCRI,EAAW,WACpB,IAAMC,EAAiBJ,EAASK,QAAO,SAAAC,GAAI,OAAIA,EAAKjB,QAC9CkB,EAAcP,EAASK,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,SAEjD,OACI,kBAAC,IAAM7B,SAAP,KACQ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcsC,KAAK,oBACnB,kBAAC,IAAD,CAAKrC,UAAU,+BACV0C,EAAeI,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAarB,MAAOqB,OAASG,WAE7D,kBAAC,EAAD,CAAcV,KAAK,YACnB,kBAAC,IAAD,CAAKrC,UAAU,+BACV6C,EAAYC,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAarB,MAAOqB,QAEjD,kBAAC,EAAD,QAMVI,EAAU,SAAC9B,GACb,OACI,kBAAC,IAAD,CAAKlB,UAAU,8BACX,kBAAC,IAAD,CAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMA,UAAU,oCACZ,uBAAGgB,KAAK,SAASJ,KAAK,gCAAgCC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,SAClG,uBAAGf,UAAU,qCAEjB,kBAAC,IAAD,CAAUA,UAAU,sBAApB,cAGR,kBAAC,IAAD,CAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMA,UAAU,oCACZ,uBAAGgB,KAAK,SAASJ,KAAK,sCAAsCC,OAAO,SAASC,IAAI,sBAAsBC,MAAM,SACxG,uBAAGf,UAAU,qCAEjB,kBAAC,IAAD,CAAUA,UAAU,sBAApB,gBChCLiD,EAVD,SAAC/B,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgC,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAU1C,GAAG,YCGV2C,MARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a88ff97d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {Row, Col, Container, Jumbotron, Button} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nconst Intro = () => {\n    const [bgColor, setBgColor] = useState(null);\n    const [intro, setIntro] = useState('block');\n    const [joke, setJoke] = useState('none');\n\n    const handleMouseEnter = () => {\n        setBgColor('#011638');\n        setIntro('none');\n        setJoke('block');\n    }\n\n    const handleMouseLeave = () => {\n        setBgColor(null);\n        setIntro('block');\n        setJoke('none');\n    }\n        \n    return (\n        <React.Fragment>\n            <Container className=\"h-100 mt-10\">\n                <Row>\n                    <Col className=\"col col-sm-6 offset-sm-3\">\n                        <Jumbotron style={{backgroundColor: bgColor}} \n                            className=\"intro-card mx-auto\" \n                            onMouseEnter={handleMouseEnter} \n                            onMouseLeave={handleMouseLeave}>\n                            <div style={{display: intro}}>\n                                <h1 className=\"text-center\">Megan McDevitt</h1>\n                                <h3 className=\"lead text-center\">The best <span style={{fontWeight: 'bold', color: '#83C5BE'}}>Full Stack Developer</span> on the planet...</h3>\n                            </div>\n                            <div style={{display: joke}} className=\"text-center\">\n                                <h1>Depending on the planet...</h1>\n                                <hr className=\"my-4\" />\n                                <NavLink to=\"/info\">\n                                    <Button id=\"moreButton\">More about Megan</Button>\n                                </NavLink>\n                            </div>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    );\n}\nexport default Intro;\n","//needed for all images to show on GitHub Pages\nexport const baseUrl = '/portfolio';","import React from 'react';\nimport {Row, Col, Card, CardText} from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\n\n//on mobile, the order changes so the two links move below the name\nexport const Header = () => {\n    return(\n            <Row className=\"m-3 header-card\">\n                <Col className='col-6 col-sm-2 text-center order-1 order-sm-0'>\n                    <Card className='header-icon justify-items-center'>\n                            <a href=\"https://github.com/mcdevittbass?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"GitHub Page\">\n                                <i className=\"fa fa-github fa-5x fa-inverse text-center\"></i>\n                            </a>\n                        <CardText className='text-center nowrap'>GitHub</CardText>\n                    </Card>\n                </Col>\n                <Col className=\"col-sm-6 mx-auto\">\n                    <h1 className=\"text-center mx-auto\">Megan McDevitt</h1>\n                    <h4 className=\"text-center\" >Full Stack Developer</h4>\n                </Col>\n                <Col className=' col-6 col-sm-2 text-center'>\n                    <Card className='header-icon justify-items-center'>\n                        <a role=\"button\" href={baseUrl + '/img/McDevitt-Resume-Feb-2021.pdf'} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Resume\">\n                            <i className=\"fa fa-file-pdf-o fa-5x fa-inverse\"></i>\n                        </a>\n                        <CardText className='text-center nowrap'>Resume</CardText>\n                    </Card>\n                </Col>\n            </Row>\n    );\n}","import React from 'react';\nimport { Row, Col, Card} from 'reactstrap';\nimport { baseUrl } from '../shared/baseUrl';\n\n//Bio in a reactstrap card for clean design/rounded edges\nconst Bio = (props) => {\n    return (\n        <React.Fragment>\n            <Row className='bio-background py-3 px-0' style={{backgroundImage: `url(${baseUrl}/img/plant2.jpeg)`}}>\n                <Col className='col-9 col-md-8 mx-auto p-0'>\n                    <Card className='bio mx-auto p-4'>\n                    <p>\n                        Hi, I'm Megan. <br /> \n                        I have experience coding in React and React Native (with Redux), NodeJS, Express, and MongoDB, \n                        in addition to HTML, CSS (with SCSS and Bootstrap), Javascript, C, Python, PHP, Typescript, PostgreSQL\n                        and using Git/GitHub for version control. <br /><br />\n                        I spent the last decade of my life as a professional musician and \n                        music teacher. While studying for my doctorate in double bass performance,\n                        I began experimenting with performing with electronics. I learned to generate\n                        and manipulate my own sounds using a program called Max/MSP, \n                        which is based in C, and fell in love with coding. \n                        This began a move toward software development, culminating in enrollment in \n                        Nucamp Full Stack Bootcamp and a decision to make a career change. \n                        Since completing Nucamp in June, I have joined a team with Code for America, \n                        participated in hackathons, created personal projects, contributed to open source, \n                        and been contracted to create websites and apps. <br /><br />\n                        I am most interested in using logic to solve problems and build great products. \n                        That could mean creating efficient, beautiful, and well-designed\n                        user interfaces (web or mobile), or\n                        on the backend to create thoughtful and efficient systems. <br />\n                    </p>\n                    <a style={{color: \"#d3d3d3\", textAlign: \"center\"}} href=\"https://www.huffpost.com/entry/composing-code-why-musici_b_10714288?guccounter=1&guce_referrer=aHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2ZlZWQvdXBkYXRlL3VybjpsaTphY3Rpdml0eTo2NjcxODc5NTUxNDI3MDY3OTA0Lw&guce_referrer_sig=AQAAAHGPQHplB_1Fmq8S_y8uomk21eo3Uik0dlFVwZV-KMymMqA2LZbMsfWSwXXk-so11vyuxiHhlnJsh_EVhIPj-O-DjDwRBmxnmkjjGuuWwK8zEKM7DCT76wW7pB1OUl-h1yznLjse2R9cnHK4YVByXt_ijLYEQgpghSwC5ZZsLuJ6\"\n                        target= \"_blank\" rel=\"noopener noreferrer\"><strong>Why should you hire a musician?</strong></a>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n}\n\nexport default Bio;","import React from 'react';\nimport { Card, CardBody, CardImg, Col, CardTitle, CardText} from 'reactstrap';\n\n//takes data from projects.js as props to populate the card\nconst ProjectCard = (props) => {\n    //if it's a website show \"site\", if it's a max patch show \"Performance\"\n    let buttonShow = props.items.site ? 'Site' : props.items.performance ? 'Performance' : '';\n    //if it's a website show \"code\", if it's a Max patch show \"patch photo\"\n    let buttonCode = props.items.code ? 'Code' : props.items.patch ? 'Patch Photo' : '';\n    //if there is no site to show, only show the \"code\" button or \"performance\" button\n    const siteBtnConst = <a className='btn btn-secondary mx-2'\n                            roll='button' \n                            href={props.items.site || props.items.performance}\n                            target='_blank'\n                            rel='noopener noreferrer'>\n                                {buttonShow}</a>\n    const siteButton = props.items.site || props.items.performance ? siteBtnConst : <div />;\n\n    return (\n        <Col className='col-12 col-md-4 my-2'>    \n            <Card sm='6' id={props.items.id} className='projectCard m-2 h-100'>    \n                <CardImg src={props.items.thumbnail} alt={props.items.alt} />\n                <CardBody>\n                    <CardTitle>{props.items.title}</CardTitle>\n                    <CardTitle>{props.items.subtitle}</CardTitle>\n                    <CardText>{props.items.text}</CardText>\n                    <a className='btn btn-secondary mx-2'\n                        roll='button' \n                        href={props.items.code || props.items.patch}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                            {buttonCode}</a>\n                    {siteButton}\n                </CardBody>\n            </Card>\n        </Col>\n    );\n }\n \n export default ProjectCard;","import { baseUrl } from '../shared/baseUrl';\n\nexport const PROJECTS = [\n    {\n        key: 0,\n        id: 'fp-bootstrap',\n        title: 'Five Points Bakery,', \n        subtitle: 'HTML, CSS/SCSS/Bootstrap, JQuery',\n        code: 'https://github.com/mcdevittbass/FivePointsBakeryBootstrap',\n        site: 'https://mcdevittbass.github.io/FivePointsBakeryBootstrap/',\n        text: 'This was the beginning of the Five Points Bakery website - using HTML and Bootstrap. It includes modals, carousels, forms, and custom buttons. I later converted it to React and continued to work on it as a SPA. The React version should be launching as their official website in 2020.',\n        thumbnail: baseUrl + '/img/FP-Homepage-cropped.png',\n        alt: 'Five Points Bakery, Bootstrap'\n    },\n    {\n        key: 1,\n        id: 'fp-react',\n        title: \"Five Points Bakery,\",\n        subtitle: \"React, SCSS/Reactstrap\",\n        code: 'https://github.com/mcdevittbass/FivePointsReact',\n        site: 'https://mcdevittbass.github.io/FivePointsReact/',\n        text: 'The Five Points Bakery website began as a design using HTML, CSS/SCSS/Bootstrap, and JQuery. I later converted it to React. Many of the components are reusable (and reused!) blocks of code. It should be launching as their official website in 2020.',\n        thumbnail: baseUrl + '/img/FP-events-cropped.png',\n        alt: 'Five Points Bakery, React'\n    },\n    {\n        key: 2,\n        id: 'portfolio',\n        title: \"This Portfolio Site\",\n        code: 'https://github.com/mcdevittbass/portfolio',\n        text: 'I hope you are enjoying this website I created in React!',\n        thumbnail: baseUrl + '/img/portfolio-site-whole.png',\n        alt: 'Portfolio Site, Megan McDevitt'\n    },\n    {\n        key: 3,\n        id: 'raw-patch',\n        title: \"On the raw and the cooked\",\n        subtitle: \"Max Patch\",\n        patch: baseUrl + '/img/On-the-raw-patch.png',\n        performance: 'https://www.youtube.com/watch?v=WbuLw3Yd0j8',\n        text: 'I wrote this piece for double bass and electronics for one of my dissertation recitals in 2016. I made the electronic sounds and effects using Max/MSP.',\n        thumbnail: baseUrl + '/img/On-the-raw-rev-patch.png',\n        alt: 'Max Patch for piece \"On the raw and the cooked\"'\n    },\n    {\n        key: 4,\n        id: 'hysterics-patch',\n        title: \"Hysterics\",\n        subtitle: \"Max Patch\",\n        patch: baseUrl + '/img/Hysterics-screenshot.png',\n        performance: 'https://www.youtube.com/watch?v=2AQ5UxXgKl0',\n        text: 'This piece took a track and manipulated it at varying speeds and pitch shifts, eventually looping and dissintigrating. There are also pitch shifts from the instrument input, and some hysterical laughter from one of the performers (me). It was written for my double bass duo, Shade and Light, in 2018.',\n        thumbnail: baseUrl + '/img/Hysterics-screenshot.png',\n        alt: 'Max Patch for piece \"Hysterics\"'\n    },\n    {\n        key: 5,\n        id: 'chat-bot',\n        title: \"Thesaurus Chat Bot\",\n        code: 'https://github.com/mcdevittbass/chat-bot-thesaurus',\n        text: 'I made this project during a MintBean Hackathon. It uses Merriam Webster\\'s thesaurus API and Botkit library for Node.',\n        site: 'https://chat-bot-by-megan.herokuapp.com/',\n        thumbnail: baseUrl + '/img/chat-bot-photo.png',\n        alt: 'Thesaurus Chat Bot site'\n    },\n    {\n        key: 6,\n        id: 'space-game',\n        title: \"Intergalactic Trash Collector\",\n        code: 'https://github.com/mcdevittbass/game-day',\n        text: 'This is a MintBean Hackathon project. It uses Phaser JS. Try to collect space garbage before you get hit by an asteroid!',\n        site: 'https://mcdevittbass.github.io/game-day',\n        thumbnail: baseUrl + '/img/ITC-photo.png',\n        alt: 'Intergalactic Trash Collector game'\n    },\n    {\n        key: 7,\n        id: 'to-do',\n        title: \"Simple To Do App\",\n        code: 'https://github.com/mcdevittbass/to-do',\n        text: 'This simple to-do app uses React and Ant Design. It is deployed on Github Pages.',\n        site: 'https://mcdevittbass.github.io/to-do',\n        thumbnail: baseUrl + '/img/to-do.png',\n        alt: 'To Do App'\n    },\n    {\n        key: 8,\n        id: 'in-out-patch',\n        title: \"IN/OUT for double bass, electronics, and Mugic motion sensor\",\n        subtitle: \"Max Patch\",\n        patch: baseUrl + '/img/in-out-photo.png',\n        performance: 'https://www.youtube.com/watch?v=a7S4gw2sFx8',\n        text: 'I wrote and performed this piece in the Future Music Lab program at Atlantic Music Festival in the summer of 2017. I made the patch for the audio as well as visual components, both of which contained triggers from the motion sensor. I also performed the piece on bass.',\n        thumbnail: baseUrl + '/img/in-out-photo.png',\n        alt: 'Max Patch for piece \"IN/OUT\"'\n    },\n    {\n        key: 9,\n        id: 'circle-up',\n        title: \"Circle Up\",\n        code: 'https://github.com/mcdevittbass/circle-time',\n        text: 'This app was created for Neutral Zone in Ann Arbor. It is designed to facilitate conversations among their students, with the ability to contribute words based on a prompt and pass a talking stick around the circle. It was made using React and Konva.',\n        site: 'https://circle-up.herokuapp.com/',\n        thumbnail: baseUrl + '/img/circle-up.png',\n        alt: 'Circle Up App'\n    },\n    {\n        key: 10,\n        id: 'autocomplete',\n        title: 'Autocomplete', \n        subtitle: 'Vanilla JS, HTML/CSS',\n        code: 'https://github.com/mcdevittbass/autocomplete',\n        text: 'This is a vanilla Javascript project that has created four autocomplete elements with an instantiated class. It can handle local data as well as API calls. There is no public site, but if you are curious, feel free to clone the repo and run it yourself!',\n        thumbnail: baseUrl + '/img/autocompleteThumbnail.png',\n        alt: 'Autocomplete'\n    }\n];","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst SectionBreak = (props) => {\n    let text = props.text;\n    return (\n        <Row className='section mt-5'>\n            <Col className='text-center'>\n                <h1>{text}</h1>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SectionBreak;","import React from 'react';\nimport { Header } from './Header';\nimport { Row, Col, Card, CardText} from 'reactstrap';\nimport Bio from './Bio';\nimport ProjectCard from './ProjectCard';\nimport { PROJECTS } from '../shared/projects';\nimport SectionBreak from './SectionBreak';\n\n\nexport const InfoPage = () => {\n    const codingProjects = PROJECTS.filter(item => item.code);\n    const maxProjects = PROJECTS.filter(item => item.patch);\n\n    return (\n        <React.Fragment>\n                <Header />\n                <Bio />\n                <SectionBreak text='Recent Projects' />\n                <Row className='justify-content-center px-3'>\n                    {codingProjects.map(item => <ProjectCard items={item}/>).reverse()}\n                </Row>\n                <SectionBreak text='Max/MSP' />\n                <Row className='justify-content-center px-3'>\n                    {maxProjects.map(item => <ProjectCard items={item}/>)}\n                </Row>\n                <Contact />\n\n        </React.Fragment>\n    );\n}\n\nconst Contact = (props) => {\n    return (\n        <Row className='justify-content-center m-5'>\n            <Col className='col-sm-2 text-center'>\n                <Card className='header-icon justify-items-center'>\n                    <a role=\"button\" href=\"mailto:mcdevittbass@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Email\">\n                        <i className=\"fa fa-envelope fa-5x fa-inverse\"></i>\n                    </a>\n                    <CardText className='text-center nowrap'>Email Me</CardText>\n                </Card>\n            </Col>\n            <Col className='col-sm-2 text-center'>\n                <Card className='header-icon justify-items-center'>\n                    <a role=\"button\" href=\"https://www.linkedin.com/in/megmcd/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Email\">\n                        <i className=\"fa fa-linkedin fa-5x fa-inverse\"></i>\n                    </a>\n                    <CardText className='text-center nowrap'>LinkedIn</CardText>\n                </Card>\n            </Col>\n        </Row>\n    );\n}","import React from 'react';\nimport Intro from './IntroComponent';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { InfoPage } from './InfoComponent';\n\nconst  Main = (props) => {\n    return (\n        <Switch>\n            <Route path='/home'><Intro /></Route>\n            <Route path='/info'><InfoPage /></Route>\n            <Redirect to='/home' />\n        </Switch>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './App.scss';\nimport Main from './components/MainComponent';\nimport { HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Main />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}